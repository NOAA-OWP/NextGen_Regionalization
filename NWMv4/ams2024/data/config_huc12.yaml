####### NextGen regionalization scenario configuration

### huc region:
huc: "12"

### hydrfabric version (must be the same for receivers and donors)
ver: "2.0pre"

### attribute scenarios to run
scenarios:
  hlr: TRUE
  camels: TRUE
  nwm21: FALSE
  all: FALSE

### algorithms to run
algorithms:
  gower: TRUE
  urf: TRUE
  kmeans: TRUE
  kmedoids: TRUE
  hdbscan: TRUE
  birch: TRUE
  proximity: TRUE

### number of parallel jobs to run
njobs: 20

### attributes for different scenarios
attrs:
  base: [elev_mean, aridity, forest_frac, sand_frac, geo_porosity]
  hlr: [prcFlatLowland, prcFlatUpland, prcFlatTotal, relief, aridity, sand_frac, geo_permeability]  
  nwm21: [prcFlatLowland, prcFlatUpland, prcFlatTotal, relief, cidx, aridity, sand_frac, clay_frac,
        soil_depth, forest_frac, cropland_frac, urban_frac]
  camels: [slope, elev_mean, p_mean, pet_mean, aridity, snow_frac, high_prec_freq,
          low_prec_freq, high_prec_dur, low_prec_dur, forest_frac, gvf_max, gvf_diff,
          lai_max, lai_diff, geo_porosity, geo_permeability, sand_frac, clay_frac,
          soil_porosity, soil_conductivity, soil_depth]

### inputs
inputs:
  
  # path to hydrofabric file (download at https://www.lynker-spatial.com/#hydrofabric/v20.1/gpkg/)
  file_hydrofab: ../datasets/nextgen_{huc}.gpkg

  # file for attribute data for all catchments (donors & receivers)
  file_attrs_data: ../attr_calc/output/all_attrs_huc{huc}_v{ver}.csv
  
  # file containing list of donor basins (USGS gage ID)
  #file_donor_list: ../data/donor_gages_huc{huc}_screened.csv
  file_donor_list: ../data/donor_gages_nwmv30.csv
  
  # crosswalk table linking donor gage ID to catchment IDs
  file_crosswalk: ../data/crosswalk_gage_cat_huc{huc}_v{ver}.csv

  # file containing donor/receiver spatial distances (row=receivers, col=donors); if file does not exist, it will be generated  
  file_distance: ../data/spatial_distance_donor_receiver_huc{huc}_v{ver}.csv
  
  # donor pairing output directory
  outdir: ../output_donor 

    
### algorithm parameters
pars:
  ## general parameters common to all algorithms 
  general:
    # snow fraction threshold to determine snowiness category 
    minSnowFrac: 0.2
    # maximum spatial distance (km) (donors with distance larger than this value are discarded, unless no donor smaller than this threshold is available)
    maxSpaDist: 1500
    # maximum differences in some key attributes between donors and receivers as additional constraints
    maxAttrDiff:
      elev_mean: 1200 
      snow_frac: 0.3 
      forest_frac: 0.5 
      urban_frac: 0.5 
      cropland_frac: 0.5 
    # maximum number of donors to keep that satisfy the attribute distance requirement
    nDonorMax: 3
    # minimum fraction of total variance explained by PCA components
    minVarPCA: 0.8
    
  ## parameters specific to gower 
  gower:
    # minimum attr distance (if one or more donors with distance smaller than this threshold, stop searching)
    minAttrDist: 0.1
    # maximum attr distance (donors with distance larger than this value are discarded, unless no donor smaller than this threshold is available)
    maxAttrDist: 0.25
    # starting distance (neighbourhood) for searching donors (km)
    minSpaDist: 200
    # maximum number of donors to keep that satisfy the attribute distance requirement
    nDonorMax: 10
    # distance (in km) threshold where receiver adopts a donor directly (i.e., donor/receiver overlapping each other)
    zeroSpaDist: 1
  
  ## parameters specific to urf (unsupervised random forest)
  urf: 
    # whether to perform PCA prior to applying urf (preliminary testing indicates limited difference in results)
    pca: FALSE
    # number of trees in the forest
    nTrees: 500
    # the maximum depth of each tree
    maxDepth: 3
    # minimum attr distance (if one or more donors with distance smaller than this threshold, stop searching)
    minAttrDist: 0.1
    # maximum attr distance (donors with distance larger than this value are discarded, unless no donor smaller than this threshold is available)
    maxAttrDist: 0.25
    # starting distance (neighbourhood) for searching donors (km)
    minSpaDist: 200
    # maximum number of donors to keep that satisfy the attribute distance requirement
    nDonorMax: 10
    # distance (in km) threshold where receiver adopts a donor directly (i.e., donor/receiver overlapping each other)
    zeroSpaDist: 1    
  
  ## parameters specific to the K-means approach
  kmeans:
    # number of donor basins in a cluster when no further clustering is needed
    nDonorMax: 30
    # number of maximum iterations
    nIterMax: 100
    # initialization method, choose from 'k-means++', 'random'
    init: k-means++
    # number of times the k-means algorithm is run with different centroid seeds.
    nInit: 3
  
  ## parameters specific to the K-mediods approach
  kmedoids:
    # number of donor basins in a cluster when no further clustering is needed
    nDonorMax: 30
    # maximum number of iterations
    nIterMax: 100
    # initialization method, choose from 'random', 'heuristic', 'k-medoids++', 'build'
    init: k-medoids++
    #init: heuristic
  
  hdbscan:
    # number of donor basins in a cluster when no further clustering is needed
    nDonorMax: 30
    # minimum cluster size (to avoid being considered noise)
    minClusterSize: 3
  
  birch:
    # number of donor basins in a cluster when no further clustering is needed
    nDonorMax: 30
    # branching factor
    branching_factor: 50
    # min and max threshold parameters - the algorithm will iterate through threshold between these to identify a suitable threshold
    minThresh: 1.5
    maxThresh: 4.0
    # maximum number of times to resample the data (since order of objects impacts the clustering results)   
    maxResample: 30 
    