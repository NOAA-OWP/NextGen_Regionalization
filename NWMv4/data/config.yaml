####### NextGen regionalization configuration
### attributes for different scenarios
attrs:
  base: [elev_mean, aridity, forest_frac, sand_frac, geo_porosity]
  HLR: [prcFlatLowland, prcFlatUpland, prcFlatTotal, relief, aridity, sand_frac, geo_permeability]  
  nwm21: [prcFlatLowland, prcFlatUpland, prcFlatTotal, relief, cidx, aridity, sand_frac, clay_frac,
        soil_depth, forest_frac, cropland_frac, urban_frac]
  camels: [slope, elev_mean, p_mean, pet_mean, aridity, snow_frac, high_prec_freq,
          low_prec_freq, high_prec_dur, low_prec_dur, forest_frac, gvf_max, gvf_diff,
          lai_max, lai_diff, geo_porosity, geo_permeability, sand_frac, clay_frac,
          soil_porosity, soil_conductivity, soil_depth]

### scenarios to run
scenarios:
  hlr: FALSE
  camels: TRUE

### hydrofabric files 
hydrofabric:
  # whether receiver and donor catchments share the same hydrofabric (version)
  shared: FALSE
  # path to hydrofabric file for receivers
  pathReceivers: ../../datasets/gpkg_v0/catchment_data.geojson
  # path to hydrofabric file for donors
  pathDonors: ../../datasets/gpkg_v1.2/catchment_data.geojson
    
### algorithm parameters
pars:
  ## general parameters common to all algorithms 
  general:
    # snow fraction threshold to determine snowiness category 
    minSnowFrac: 0.2
    # maximum spatial distance (km) (donors with distance larger than this value are discarded, unless no donor smaller than this threshold is available)
    maxSpaDist: 1500
    # maximum differences in some key attributes between donors and receivers as additional constraints
    maxAttrDiff:
      elev_mean: 1200 
      snow_frac: 0.3 
      forest_frac: 0.5 
      urban_frac: 0.5 
      cropland_frac: 0.5 
    # maximum number of donors to keep that satisfy the attribute distance requirement
    nDonorMax: 3
    # minimum fraction of total variance explained by PCA components
    minVarPCA: 0.8
    
  ## parameters specific to gower 
  gower:
    # whether to use the gower method for the current run
    run: FALSE
    # minimum attr distance (if one or more donors with distance smaller than this threshold, stop searching)
    minAttrDist: 0.1
    # maximum attr distance (donors with distance larger than this value are discarded, unless no donor smaller than this threshold is available)
    maxAttrDist: 0.25
    # starting distance (neighbourhood) for searching donors (km)
    minSpaDist: 200
    # maximum number of donors to keep that satisfy the attribute distance requirement
    nDonorMax: 3
    # distance (in km) threshold where receiver adopts a donor directly (i.e., donor/receiver overlapping each other)
    zeroSpaDist: 1
  urf: #unsupervised random forest
    run: TRUE
    # conduct PCA prior to URF
    pca: FALSE
    # number of jobs to use for parallel computation of distance
    njobs: 5
    # number of trees in the forest
    nTrees: 500
    # the maximum depth of each tree
    maxDepth: 3
    # minimum attr distance (if one or more donors with distance smaller than this threshold, stop searching)
    minAttrDist: 0.1
    # maximum attr distance (donors with distance larger than this value are discarded, unless no donor smaller than this threshold is available)
    maxAttrDist: 0.25
    # starting distance (neighbourhood) for searching donors (km)
    minSpaDist: 200
    # maximum number of donors to keep that satisfy the attribute distance requirement
    nDonorMax: 3
    # distance (in km) threshold where receiver adopts a donor directly (i.e., donor/receiver overlapping each other)
    zeroSpaDist: 1    
  ## parameters specific to the K-means approach
  kmeans:
    run: FALSE
    # number of donor basins in a cluster when no further clustering is needed
    nDonorMax: 3
    # number of maximum iterations
    nIterMax: 100
    # initialization method, choose from 'k-means++', 'random'
    init: k-means++
    # number of times the k-means algorithm is run with different centroid seeds.
    nInit: 3
  ## parameters specific to the K-mediods approach
  kmedoids:
    run: FALSE
    # number of donor basins in a cluster when no further clustering is needed
    nDonorMax: 3
    # maximum number of iterations
    nIterMax: 100
    # initialization method, choose from 'random', 'heuristic', 'k-medoids++', 'build'
    init: heuristic
  hdbscan:
    run: FALSE
    # number of donor basins in a cluster when no further clustering is needed
    nDonorMax: 20
    # minimum cluster size (to avoid being considered noise)
    minClusterSize: 3
  birch:
    run: FALSE
    # number of donor basins in a cluster when no further clustering is needed
    nDonorMax: 3
    # branching factor
    branching_factor: 50
    # min and max threshold parameters - the algorithm will iterate through threshold between these to identify a suitable threshold
    minThresh: 1.5
    maxThresh: 4.0
    # maximum number of times to resample the data (since order of objects impacts the clustering results)   
    maxResample: 20 
    